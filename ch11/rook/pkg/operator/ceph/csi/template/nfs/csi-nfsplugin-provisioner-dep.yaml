kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-nfsplugin-provisioner
  namespace: {{ .Namespace }}
spec:
  replicas: {{ .ProvisionerReplicas }}
  selector:
    matchLabels:
     app: csi-nfsplugin-provisioner
  template:
    metadata:
      labels:
        app: csi-nfsplugin-provisioner
        {{ range $key, $value := .CSINFSPodLabels }}
        {{ $key }}: "{{ $value }}"
        {{ end }}
    spec:
      serviceAccountName: rook-csi-nfs-provisioner-sa
      {{ if .ProvisionerPriorityClassName }}
      priorityClassName: {{ .ProvisionerPriorityClassName }}
      {{ end }}
      containers:
        - name: csi-provisioner
          image: {{ .ProvisionerImage }}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v={{ .LogLevel }}"
            - "--timeout={{ .GRPCTimeout }}"
            - "--retry-interval-start=500ms"
            - "--leader-election=true"
            - "--leader-election-namespace={{ .Namespace }}"
          env:
            - name: ADDRESS
              value: unix:///csi/csi-provisioner.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-nfsplugin
          image: {{ .CSIPluginImage }}
          args:
            - "--nodeid=$(NODE_ID)"
            - "--type=nfs"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--v={{ .LogLevel }}"
            - "--controllerserver=true"
            - "--drivername={{ .DriverNamePrefix }}nfs.csi.ceph.com"
            - "--pidlimit=-1"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CSI_ENDPOINT
              value: unix:///csi/csi-provisioner.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: host-sys
              mountPath: /sys
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: host-dev
              mountPath: /dev
            - name: ceph-csi-config
              mountPath: /etc/ceph-csi-config/
            - name: keys-tmp-dir
              mountPath: /tmp/csi/keys
            {{ if .MountCustomCephConf }}
            - name: ceph-config
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
            {{ end }}
      volumes:
        - name: socket-dir
          emptyDir: {
            medium: "Memory"
          }
        - name: host-sys
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: host-dev
          hostPath:
            path: /dev
        - name: ceph-csi-config
          configMap:
            name: rook-ceph-csi-config
            items:
              - key: csi-cluster-config-json
                path: config.json
        - name: keys-tmp-dir
          emptyDir: {
            medium: "Memory"
          }
        {{ if .MountCustomCephConf }}
        - name: ceph-config
          configMap:
            name: csi-ceph-conf-override
            items:
            - key: ceph.conf
              path: ceph.conf
        {{ end }}
