pull_request_rules:
  # auto label PRs based on title content
  - name: auto ceph label pr storage backend
    conditions:
      - title~=^ceph
      - base=master
    actions:
      label:
        add:
          - ceph

  # if there is a conflict in a backport PR, ping the author to send a proper backport PR
  - name: ping author on conflicts
    conditions:
      - conflict
    actions:
      comment:
        message: This pull request has merge conflicts that must be resolved before it can be merged. @{{author}} please rebase it. https://rook.io/docs/rook/master/development-flow.html#updating-your-fork

  # automerge on master only under certain strict conditions
  - name: automerge merge master with specific label and approvals with code change
    conditions:
      - author=mergify[bot]
      - base=master
      - "#approved-reviews-by>=1"
      - "#changes-requested-reviews-by=0"
      - label!=do-not-merge
      - label=ready-to-merge
      - 'check-success=DCO'
      - 'check-success=canary'
      - 'check-success=unittests'
      - 'check-success=golangci-lint'
      - 'check-success=codegen'
      - 'check-success=lint'
      - 'check-success=modcheck'
      - 'check-success=pvc'
      - 'check-success=pvc-db'
      - 'check-success=pvc-db-wal'
      - 'check-success=encryption-pvc'
      - 'check-success=encryption-pvc-db'
      - 'check-success=encryption-pvc-db-wal'
      - 'check-success=encryption-pvc-kms-vault-token-auth'
      - 'check-success=TestCephSmokeSuite'
      - 'check-success=TestCephHelmSuite'
      - 'check-success=TestCephMultiClusterDeploySuite'
      - 'check-success=TestCephUpgradeSuite'
    actions:
      merge:
        method: merge
        strict: false
      dismiss_reviews: {}
      delete_head_branch: {}

  - name: automerge merge master with specific label and approvals without code change
    conditions:
      - author=mergify[bot]
      - base=master
      - "#approved-reviews-by>=1"
      - "#changes-requested-reviews-by=0"
      - label!=do-not-merge
      - label=ready-to-merge
      - 'check-success=lint'
      - 'check-success=DCO'
      - 'check-success=build'
    actions:
      merge:
        method: merge
        strict: false
      dismiss_reviews: {}
      delete_head_branch: {}

  # automerge backports if CI successfully ran
  # release-1.3 branch
  - name: automerge backport release-1.3
    conditions:
      - author=mergify[bot]
      - base=release-1.3
      - label!=do-not-merge
      - 'status-success=DCO'
      - 'status-success=continuous-integration/jenkins/pr-head'
    actions:
      merge:
        method: merge
        strict: false
      dismiss_reviews: {}
      delete_head_branch: {}
  # release-1.4 branch
  - name: automerge backport release-1.4
    conditions:
      - author=mergify[bot]
      - base=release-1.4
      - label!=do-not-merge
      - 'status-success=DCO'
      - 'status-success=continuous-integration/jenkins/pr-head'
    actions:
      merge:
        method: merge
        strict: false
      dismiss_reviews: {}
      delete_head_branch: {}
  # release-1.5 branch
  - name: automerge backport release-1.5
    conditions:
      - author=mergify[bot]
      - base=release-1.5
      - label!=do-not-merge
      - 'status-success=DCO'
      - 'status-success=continuous-integration/jenkins/pr-head'
    actions:
      merge:
        method: merge
        strict: false
      dismiss_reviews: {}
      delete_head_branch: {}
  # release-1.6 branch
  - name: automerge backport release-1.6
    conditions:
      - author=mergify[bot]
      - base=release-1.6
      - label!=do-not-merge
      - 'status-success=DCO'
      - 'check-success=canary'
      - 'check-success=unittests'
      - 'check-success=golangci-lint'
      - 'check-success=codegen'
      - 'check-success=lint'
      - 'check-success=modcheck'
      - 'check-success=pvc'
      - 'check-success=pvc-db'
      - 'check-success=pvc-db-wal'
      - 'check-success=encryption-pvc'
      - 'check-success=encryption-pvc-db'
      - 'check-success=encryption-pvc-db-wal'
      - 'check-success=encryption-pvc-kms-vault-token-auth'
      - 'check-success=TestCephSmokeSuite (v1.15.12)'
      - 'check-success=TestCephSmokeSuite (v1.20.2)'
      - 'check-success=TestCephHelmSuite (v1.15.12)'
      - 'check-success=TestCephHelmSuite (v1.20.2)'
      - 'check-success=TestCephMultiClusterDeploySuite (v1.20.2)'
      - 'check-success=TestCephUpgradeSuite (v1.20.2)'
    actions:
      merge:
        method: merge
        strict: false
      dismiss_reviews: {}
      delete_head_branch: {}

  # Trigger backport PRs based on label
  # release-1.3 branch
  - actions:
      backport:
        branches:
          - release-1.3
    conditions:
      - label=backport-release-1.3
    name: backport release-1.3

  # release-1.4 branch
  - actions:
      backport:
        branches:
          - release-1.4
    conditions:
      - label=backport-release-1.4
    name: backport release-1.4

  # release-1.5 branch
  - actions:
      backport:
        branches:
          - release-1.5
    conditions:
      - label=backport-release-1.5
    name: backport release-1.5

  # release-1.6 branch
  - actions:
      backport:
        branches:
          - release-1.6
    conditions:
      - label=backport-release-1.6
    name: backport release-1.6
